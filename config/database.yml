# PostgreSQL. Versions 9.3 and up are supported.
#   gem install pg
#
#   Ensure the PostgreSQL gem is defined in your Gemfile
#   gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  <<: *default
  database: netmovies_development
  username: <%= ENV.fetch("DATABASE_USERNAME") { "postgres" } %>
  password: <%= ENV.fetch("DATABASE_PASSWORD") { "postgres" } %>
  host: <%= ENV.fetch("DATABASE_HOST") { "localhost" } %>

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: netmovies_test
  username: <%= ENV.fetch("DATABASE_USERNAME") { "postgres" } %>
  password: <%= ENV.fetch("DATABASE_PASSWORD") { "postgres" } %>
  host: <%= ENV.fetch("DATABASE_HOST") { "localhost" } %>

# Store production database credentials in the Rails credentials system
production:
  primary:
    <<: *default
    url: <%= ENV['DATABASE_URL'] %>
    database: netmovies_production
    username: <%= ENV["DATABASE_USERNAME"] %>
    password: <%= ENV["DATABASE_PASSWORD"] %>
    host: <%= ENV["DATABASE_HOST"] %>
    port: <%= ENV["DATABASE_PORT"] || 5432 %>
  cache:
    <<: *default
    database: storage/production_cache.sqlite3
    migrations_paths: db/cache_migrate
  queue:
    <<: *default
    database: storage/production_queue.sqlite3
    migrations_paths: db/queue_migrate
  cable:
    <<: *default
    database: storage/production_cable.sqlite3
    migrations_paths: db/cable_migrate
